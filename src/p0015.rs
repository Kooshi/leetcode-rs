

#[cfg(test)]
mod tests {
    use super::Solution;
    #[test]
    fn it_works() {

        assert_eq!(Solution::three_sum(vec![0,0,0,]),vec![vec![0,0,0]]);
        assert_eq!(Solution::three_sum(vec![-444,-26,391,-280,-184,263, 51,359,-191,-168,-45,-376,-140, 99,428,-72,-88,-229,160,-277,249,-166, 48,296,  3, 10,-352,-452,321,169,488,239,257,-148, 94, 86,-70,-288,-378,-369,-183, 84,-25,-107,-363,218,293, 92,106, 70,339, -5,-170,-245,280,-424,-486,-49,-203,-286,-46,252, 93,-353,107,411,-228,-390,-284,-153,356,360,-475,-33,-61,457,-407,103,-316,453,-95, 50,498,486,410,  2,475,278,-188,323,-305,-173,266,305,227,-296,284,-275,492,-211,-59, 56,409,279, 69,-332,-293,-347,-311,-247,-51,427, 18,-218,496,349,-333,-190,373,140,116,-430,-382,366,180,-400,326,-162,125,-225,-342,371,-40, 89,-115,406,-186,423,197,417,-181,-374, 59,499,-306, -6, 15,131,104,-317,-164,352,-58,-268,-304,221,395,-313,-75,-139,415,208,333, 31,-91,348,209,-417,110,337,-117,-152,-55, -1,-133,178,-208, 46,-406,-498,-56,-143,460,-385,-213,-253,-468,248,-289,173, 42, 74,-387,-396,-204,477,-68,-219,-221,315,-391, 91, 83,-298,-290,-131,285,235,-294,-180,-150,-101,256,-442, 52,300,-116,272, 82,454,220,-105, 81,362,331,452,-160,132,393,-198,-103,147,-171,-85,-423,448,-209,153, 76,179,168,-169,-328,432,-15,146,-274,-155,-263,-456,-490,171,232,182,-141,-478,471,-359,-312,-285,-250,-420,-179,111,-480,461,464,320,  7,416,200,267,302, 58, 55, 90,230,-346,128,289,-158, 49, 54,-206, 60,-454,-416,-71,382,154,-273,-182,-205,-435,-325, 28,-212,-484,-340,317,422,170,380,158,157,122,196, 66,-165,-460,159,400,343,-394,181,191, 38,-453,342,269,-330,-309,-395,-421,-458,-491,404,493,-470, 30,-142,389,101,445,123,497,-185,334,-178,385,-27,314,-231,-83,-100, 63,-124,216, 32,-357,290,434,126,-410,-21,219,479,-63,112,118,-276,136,-35,-238,234,  6,-110,-367, -2,379,472,-351,-476,-354,-467,-73,-441,-343,175,-47,-230, 23,-349,-474,-319,377,-466,282,-22,-463,150,-192,-299,-257,-77,-335,-496,236,402,-14,-259,254,-60, 21, 75,436,-97,-252,-174,251,  8,431,-129,-320, 16,-149,187,-42,-408,-167,253,-235,108,-398,-111, 67,109,-122, 40,-84,198,441,-365, 78,-479,258, 43,-404, 65,-295,-159,176,141,450,295,225,-260,138,364,-32, 47,-409,-419, 45,-106,-362,-210,-489,-220,-392,-28, 25,482,332, 44,148,474,-119,-446,199,-261,124,-256,281, 11,-469,  4,440, 61,330,202,336,-226,-358,-34,201,-291,-137,250,119,429,297,384,-200,115,-302,307,222,-379,-364,-439,-197,189,351,-38,-243,-326,467,167,204,-24,142,468,-426,-448,-66,-44,-431,-331,-445,-449,442,265, -7,-163,451,260,403,-279,205,424,353,412,-57,-429,229,247,-151, 33,210,-12,401,308,-144,484,183,-301,-147,-315,163, 95,242,-372,-207,347,-222,-37,500,-350,-138,288,399,-30,465,184, 35, 73,-397,161,-126, -3,447,-120, -8,-41,-16,144,127,105,-102, 26,-112,-371,369,149,470,-401,-433,-50,-373,226,274,405,-473,456,-123, 34,341,-339,426, 20,-19,217,476,-125,-485, 22,418,413, -9,-187,419,-157,-310,394,381,292,237,241,-329,421,327,-92,276,-262,214,495, 71,-321,340,294,-254,310,-90,213,-237,-89,-455,-23,-255,-132,-414,-492,433,363, 19,-437,291,-389,  1,318,-412,-461,275, 12,-80,319,407, 14,-265,435,-76,134,-202,-440,-494,-118,185,228,-224, 53,114,-488,143,303,  0,-450,316,397,361,-281,346,-134, 77,-368, 98, 79,133,-318,-234,-443,-483,-193,-62,-216,-422,-482,388,264,396, 68,390,459,-500,-201, 85,-236,378,-278,-161,-130,-360,-428,444,271,156,-31,246,-322,-487,243,-418,490,374,177,-337, 13,306,-370,-87,194,345,262,-377,211,-74,152,313,301,130,-239,-425,-79,478,277,338,469,-104,466,-405,398,240,-366,485,-18, 29,-241, 27,-297,-459,375,-361,-215,117,437,-96,203,193,-345,-380,207,439,-54,370,386,206,164,-477,-264,-499,489,299,-177,-402,-135,494,487,-246,-36,-432,372,283,155,-303,188,238,224,120,-471,-451,-64,-381,-338,-109,-287,195,231,-29,-69, 96,387,-355,376,324,-282,-146, 64,100,  9,-128, 62,-447,-411,-127,212,312,233,-194,-217,-465,-386,223,261,137,215,425,-53,-462,325,-307,-438,-356,186,-39,350,-308,-393,-43, -4,-52,-172,-195,166,-493,311,-10,-196,328,-175, 39, 36, 57,162,-384,129,-242,102,-93,165,190,481,113,358,-65,-48,304,-324,-249,-269,446,-388,-82,-121,-272,-472,-283,245,287,449,-375,438,458,-415,-199,-94,-383,-413,-464,-154,-17,462,-78,-11,121,-327,145,-108,443,-86,  5,172, 88,-244,-314,-189,-20,135,-176, 80,268,259,-267,-67,-348, 87,-232,-336,-113,-156,-403,-436,355,491,365,383,335, 41,192, 97,-251, 24,-434,273,-258,139,463,-240,-145,473,-271,-292,-233,-457,-13,-495,-136,-99,-334,286,255,-98,357,174,483,-270,329,-427, 72,270,298,367,-81,408,392,-344,-227,368,-114,480,-323,-300,354, 37,-223,430,-497,244,-399,309,-248,-481,322, 17,-214,455,-266,414,344,-341,151,420,-444,-26,391,-280,-184,263, 51,359,-191,-168,-45,-376,-140, 99,428,-72,-88,-229,160,-277,249,-166, 48,296,  3, 10,-352,-452,321,169,488,239,257,-148, 94, 86,-70,-288,-378,-369,-183, 84,-25,-107,-363,218,293, 92,106, 70,339, -5,-170,-245,280,-424,-486,-49,-203,-286,-46,252, 93,-353,107,411,-228,-390,-284,-153,356,360,-475,-33,-61,457,-407,103,-316,453,-95, 50,498,486,410,  2,475,278,-188,323,-305,-173,266,305,227,-296,284,-275,492,-211,-59, 56,409,279, 69,-332,-293,-347,-311,-247,-51,427, 18,-218,496,349,-333,-190,373,140,116,-430,-382,366,180,-400,326,-162,125,-225,-342,371,-40, 89,-115,406,-186,423,197,417,-181,-374, 59,499,-306, -6, 15,131,104,-317,-164,352,-58,-268,-304,221,395,-313,-75,-139,415,208,333, 31,-91,348,209,-417,110,337,-117,-152,-55, -1,-133,178,-208, 46,-406,-498,-56,-143,460,-385,-213,-253,-468,248,-289,173, 42, 74,-387,-396,-204,477,-68,-219,-221,315,-391, 91, 83,-298,-290,-131,285,235,-294,-180,-150,-101,256,-442, 52,300,-116,272, 82,454,220,-105, 81,362,331,452,-160,132,393,-198,-103,147,-171,-85,-423,448,-209,153, 76,179,168,-169,-328,432,-15,146,-274,-155,-263,-456,-490,171,232,182,-141,-478,471,-359,-312,-285,-250,-420,-179,111,-480,461,464,320,  7,416,200,267,302, 58, 55, 90,230,-346,128,289,-158, 49, 54,-206, 60,-454,-416,-71,382,154,-273,-182,-205,-435,-325, 28,-212,-484,-340,317,422,170,380,158,157,122,196, 66,-165,-460,159,400,343,-394,181,191, 38,-453,342,269,-330,-309,-395,-421,-458,-491,404,493,-470, 30,-142,389,101,445,123,497,-185,334,-178,385,-27,314,-231,-83,-100, 63,-124,216, 32,-357,290,434,126,-410,-21,219,479,-63,112,118,-276,136,-35,-238,234,  6,-110,-367, -2,379,472,-351,-476,-354,-467,-73,-441,-343,175,-47,-230, 23,-349,-474,-319,377,-466,282,-22,-463,150,-192,-299,-257,-77,-335,-496,236,402,-14,-259,254,-60, 21, 75,436,-97,-252,-174,251,  8,431,-129,-320, 16,-149,187,-42,-408,-167,253,-235,108,-398,-111, 67,109,-122, 40,-84,198,441,-365, 78,-479,258, 43,-404, 65,-295,-159,176,141,450,295,225,-260,138,364,-32, 47,-409,-419, 45,-106,-362,-210,-489,-220,-392,-28, 25,482,332, 44,148,474,-119,-446,199,-261,124,-256,281, 11,-469,  4,440, 61,330,202,336,-226,-358,-34,201,-291,-137,250,119,429,297,384,-200,115,-302,307,222,-379,-364,-439,-197,189,351,-38,-243,-326,467,167,204,-24,142,468,-426,-448,-66,-44,-431,-331,-445,-449,442,265, -7,-163,451,260,403,-279,205,424,353,412,-57,-429,229,247,-151, 33,210,-12,401,308,-144,484,183,-301,-147,-315,163, 95,242,-372,-207,347,-222,-37,500,-350,-138,288,399,-30,465,184, 35, 73,-397,161,-126, -3,447,-120, -8,-41,-16,144,127,105,-102, 26,-112,-371,369,149,470,-401,-433,-50,-373,226,274,405,-473,456,-123, 34,341,-339,426, 20,-19,217,476,-125,-485, 22,418,413, -9,-187,419,-157,-310,394,381,292,237,241,-329,421,327,-92,276,-262,214,495, 71,-321,340,294,-254,310,-90,213,-237,-89,-455,-23,-255,-132,-414,-492,433,363, 19,-437,291,-389,  1,318,-412,-461,275, 12,-80,319,407, 14,-265,435,-76,134,-202,-440,-494,-118,185,228,-224, 53,114,-488,143,303,  0,-450,316,397,361,-281,346,-134, 77,-368, 98, 79,133,-318,-234,-443,-483,-193,-62,-216,-422,-482,388,264,396, 68,390,459,-500,-201, 85,-236,378,-278,-161,-130,-360,-428,444,271,156,-31,246,-322,-487,243,-418,490,374,177,-337, 13,306,-370,-87,194,345,262,-377,211,-74,152,313,301,130,-239,-425,-79,478,277,338,469,-104,466,-405,398,240,-366,485,-18, 29,-241, 27,-297,-459,375,-361,-215,117,437,-96,203,193,-345,-380,207,439,-54,370,386,206,164,-477,-264,-499,489,299,-177,-402,-135,494,487,-246,-36,-432,372,283,155,-303,188,238,224,120,-471,-451,-64,-381,-338,-109,-287,195,231,-29,-69, 96,387,-355,376,324,-282,-146, 64,100,  9,-128, 62,-447,-411,-127,212,312,233,-194,-217,-465,-386,223,261,137,215,425,-53,-462,325,-307,-438,-356,186,-39,350,-308,-393,-43, -4,-52,-172,-195,166,-493,311,-10,-196,328,-175, 39, 36, 57,162,-384,129,-242,102,-93,165,190,481,113,358,-65,-48,304,-324,-249,-269,446,-388,-82,-121,-272,-472,-283,245,287,449,-375,438,458,-415,-199,-94,-383,-413,-464,-154,-17,462,-78,-11,121,-327,145,-108,443,-86,  5,172, 88,-244,-314,-189,-20,135,-176, 80,268,259,-267,-67,-348, 87,-232,-336,-113,-156,-403,-436,355,491,365,383,335, 41,192, 97,-251, 24,-434,273,-258,139,463,-240,-145,473,-271,-292,-233,-457,-13,-495,-136,-99,-334,286,255,-98,357,174,483,-270,329,-427, 72,270,298,367,-81,408,392,-344,-227,368,-114,480,-323,-300,354, 37,-223,430,-497,244,-399,309,-248,-481,322, 17,-214,455,-266,414,344,-341,151,420,-444,-26,391,-280,-184,263, 51,359,-191,-168,-45,-376,-140, 99,428,-72,-88,-229,160,-277,249,-166, 48,296,  3, 10,-352,-452,321,169,488,239,257,-148, 94, 86,-70,-288,-378,-369,-183, 84,-25,-107,-363,218,293, 92,106, 70,339, -5,-170,-245,280,-424,-486,-49,-203,-286,-46,252, 93,-353,107,411,-228,-390,-284,-153,356,360,-475,-33,-61,457,-407,103,-316,453,-95, 50,498,486,410,  2,475,278,-188,323,-305,-173,266,305,227,-296,284,-275,492,-211,-59, 56,409,279, 69,-332,-293,-347,-311,-247,-51,427, 18,-218,496,349,-333,-190,373,140,116,-430,-382,366,180,-400,326,-162,125,-225,-342,371,-40, 89,-115,406,-186,423,197,417,-181,-374, 59,499,-306, -6, 15,131,104,-317,-164,352,-58,-268,-304,221,395,-313,-75,-139,415,208,333, 31,-91,348,209,-417,110,337,-117,-152,-55, -1,-133,178,-208, 46,-406,-498,-56,-143,460,-385,-213,-253,-468,248,-289,173, 42, 74,-387,-396,-204,477,-68,-219,-221,315,-391, 91, 83,-298,-290,-131,285,235,-294,-180,-150,-101,256,-442, 52,300,-116,272, 82,454,220,-105, 81,362,331,452,-160,132,393,-198,-103,147,-171,-85,-423,448,-209,153, 76,179,168,-169,-328,432,-15,146,-274,-155,-263,-456,-490,171,232,182,-141,-478,471,-359,-312,-285,-250,-420,-179,111,-480,461,464,320,  7,416,200,267,302, 58, 55, 90,230,-346,128,289,-158, 49, 54,-206, 60,-454,-416,-71,382,154,-273,-182,-205,-435,-325, 28,-212,-484,-340,317,422,170,380,158,157,122,196, 66,-165,-460,159,400,343,-394,181,191, 38,-453,342,269,-330,-309,-395,-421,-458,-491,404,493,-470, 30,-142,389,101,445,123,497,-185,334,-178,385,-27,314,-231,-83,-100, 63,-124,216, 32,-357,290,434,126,-410,-21,219,479,-63,112,118,-276,136,-35,-238,234,  6,-110,-367, -2,379,472,-351,-476,-354,-467,-73,-441,-343,175,-47,-230, 23,-349,-474,-319,377,-466,282,-22,-463,150,-192,-299,-257,-77,-335,-496,236,402,-14,-259,254,-60, 21, 75,436,-97,-252,-174,251,  8,431,-129,-320, 16,-149,187,-42,-408,-167,253,-235,108,-398,-111, 67,109,-122, 40,-84,198,441,-365, 78,-479,258, 43,-404, 65,-295,-159,176,141,450,295,225,-260,138,364,-32, 47,-409,-419, 45,-106,-362,-210,-489,-220,-392,-28, 25,482,332, 44,148,474,-119,-446,199,-261,124,-256,281, 11,-469,  4,440, 61,330,202,336,-226,-358,-34,201,-291,-137,250,119,429,297,384,-200,115,-302,307,222,-379,-364,-439,-197,189,351,-38,-243,-326,467,167,204,-24,142,468,-426,-448,-66,-44,-431,-331,-445,-449,442,265, -7,-163,451,260,403,-279,205,424,353,412,-57,-429,229,247,-151, 33,210,-12,401,308,-144,484,183,-301,-147,-315,163, 95,242,-372,-207,347,-222,-37,500,-350,-138,288,399,-30,465,184, 35, 73,-397,161,-126, -3,447,-120, -8,-41,-16,144,127,105,-102, 26,-112,-371,369,149,470,-401,-433,-50,-373,226,274,405,-473,456,-123, 34,341,-339,426, 20,-19,217,476,-125,-485, 22,418,413, -9,-187,419,-157,-310,394,381,292,237,241,-329,421,327,-92,276,-262,214,495, 71,-321,340,294,-254,310,-90,213,-237,-89,-455,-23,-255,-132,-414,-492,433,363, 19,-437,291,-389,  1,318,-412,-461,275, 12,-80,319,407, 14,-265,435,-76,134,-202,-440,-494,-118,185,228,-224, 53,114,-488,143,303,  0,-450,316,397,361,-281,346,-134, 77,-368, 98, 79,133,-318,-234,-443,-483,-193,-62,-216,-422,-482,388,264,396, 68,390,459,-500,-201, 85,-236,378,-278,-161,-130,-360,-428,444,271,156,-31,246,-322,-487,243,-418,490,374,177,-337, 13,306,-370,-87,194,345,262,-377,211,-74,152,313,301,130,-239,-425,-79,478,277,338,469,-104,466,-405,398,240,-366,485,-18, 29,-241, 27,-297,-459,375,-361,-215,117,437,-96,203,193,-345,-380,207,439,-54,370,386,206,164,-477,-264,-499,489,299,-177,-402,-135,494,487,-246,-36,-432,372,283,155,-303,188,238,224,120,-471,-451,-64,-381,-338,-109,-287,195,231,-29,-69, 96,387,-355,376,324,-282,-146, 64,100,  9,-128, 62,-447,-411,-127,212,312,233,-194,-217,-465,-386,223,261,137,215,425,-53,-462,325,-307,-438,-356,186,-39,350,-308,-393,-43, -4,-52,-172,-195,166,-493,311,-10,-196,328,-175, 39, 36, 57,162,-384,129,-242,102,-93,165,190,481,113,358,-65,-48,304,-324,-249,-269,446,-388,-82,-121,-272,-472,-283,245,287,449,-375,438,458,-415,-199,-94,-383,-413,-464,-154,-17,462,-78,-11,121,-327,145,-108,443,-86,  5,172, 88,-244,-314,-189,-20,135,-176, 80,268,259,-267,-67,-348, 87,-232,-336,-113,-156,-403,-436,355,491,365,383,335, 41,192, 97,-251, 24,-434,273,-258,139,463,-240,-145,473,-271,-292,-233,-457,-13,-495,-136,-99,-334,286,255,-98,357,174,483,-270,329,-427, 72,270,298,367,-81,408,392,-344,-227,368,-114,480,-323,-300,354, 37,-223,430,-497,244,-399,309,-248,-481,322, 17,-214,455,-266,414,344])
                   ,vec![vec![]])
    }

    // use test::Bencher;
    // #[bench]
    // fn bench(b: &mut Bencher) {
    //     b.iter(|| )
    // }
}
struct Solution;

use std::collections::{HashSet, HashMap};
impl Solution {
    pub fn three_sum(mut nums: Vec<i32>) -> Vec<Vec<i32>> {
        let mut result = HashSet::new();
        let mut dedup: HashMap<i32, Vec<usize>> = HashMap::new();
        for (i, v) in nums.iter().enumerate() {
            dedup.entry(*v).and_modify(|v| v.push(i)).or_insert_with(|| vec![i]);
        }
        for i in 0..nums.len() {
            for j in i + 1..nums.len() {
                if dedup.contains_key(&-(nums[i] + nums[j]))
                    && dedup[&-(nums[i] + nums[j])].iter().any(|vi| *vi != i && *vi != j) {
                    let mut new = vec![nums[i], nums[j], -(nums[i] + nums[j])];
                    new.sort();
                    result.insert(new);
                }
            }
        }
        result.into_iter().collect()
    }
}